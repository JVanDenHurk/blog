bandit 0 

lets start first we login to the server

ssh bandit.labs.overthewire.org -p 2220 -l bandit0

prompt for password enter bandit0

ls to see what files there

then cat readme

Flag: ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If

________________________________________________________________

bandit1

ls

find a file named -

quick google search found that if I cat - it interprets its a standerd input or stdin.

cat ./- by giving it a path cat can tell its a file and not stdin.

flag: 263JGJPfgU6LtdEvgfWU1XP5yac29mFx

________________________________________________________________

bandit2

ls file shows space in this filename.

cat, type sp and press tab auto fills the escapes \ should look like this: cat spaces\ in\ this\ filename.

flag: MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx

________________________________________________________________

bandit3

ls find a file inhere

cd inhere

ls don't see anything ls -a using the -a shows all hidden files.

find ...Hiding-From-You

cat ...Hiding-From-You

flag: 2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ

________________________________________________________________

bandit4

ls inhere folder

cd inhere

used file ./* prints all the files and types.

-file07 is ASCII text.

cat ./-file07

flag: 4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw

________________________________________________________________

bandit5

ls file inhere cd inhere

mutltiple files to search through

there is a hint on https://overthewire.org/wargames/bandit/bandit6.html.

use find with these properties human-readable, 1033 bytes in size, not executable.

find inhere -type f -size 1033c ! -executable

with the result inhere/maybehere07/.file2

cat inhere/maybehere07/.file2

flag: HWasnPhtq9AVKe0dmk45nxy20cvUa6EG

________________________________________________________________

bandit6

following the instructions again https://overthewire.org/wargames/bandit/bandit7.html

we need to serch /, only file type, owned by bandit7, grouped by bandit6, exatcly 33bytes and redirect errors to null.

find / -type f -user bandit7 -group bandit6 -size 33c 2>/dev/null

cat /var/lib/dpkg/info/bandit7.password

flag: morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj

________________________________________________________________

bandit7

ls has a file called data.txt that holds alot of text.

according to hint it should be next to the millionth word.

cat data.txt | grep millionth

flag: dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc

________________________________________________________________

bandit8

hint tells us data.txt has duplicates and the flag only appears once.

we need to group the duplicates and find the uniq

sort data.txt | uniq -u

flag: 4CKMh1JI91bUIZZPXDqGanal4xvAg0JM

________________________________________________________________

bandit9

need to find a few human-readable strings preceded by serveral '=' characters

strings data.txt | grep ===

flag: FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey

________________________________________________________________

bandit10

the text file is base64 encoded.

use the command basecode64 with -d flag to decode and pass the file.

basecode64 -d data.txt

flag: dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr

________________________________________________________________

bandit11

the text file is a rot13 cipher.

cat data.txt

Gur cnffjbeq vf 7k16JArUVv5LxVuJfsSVdbbtaHGlw9D4

we need to read the file, translate all lowercase and uppercase letters (remove whitespace) then rotate each 13th letter.

cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m'

flag: 7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4

________________________________________________________________

bandit12

we need read a file that is a hexdump but also compressed multiple times.

it also suggest we create a directory under /tmp and copy the contents there.

cd ../../tmp

mkdir letmemakrdir ... i had issue making a directory because other users had already taken the folder name. 

cp ../../home/bandit12/data.txt . 

copied the conent of bandit12 to my folder.

now I'll convert it back to binary

xxd -r data.txt > data.bin

file data.bin

check what what zip it is and unzip it

mv data.bin data.gz

gunzip data.gz

bunzip data

mv data.out data.gz

gunzip data.gz

tar -xf data

tar -xf data5.bin

tar -xf data6.bin

mv data8.bin data8.gz

gunzip data8.zip

cat data8

flag: FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn

________________________________________________________________

bandit13

need to ssh into bandit14 and access the password in /etc/bandit_pass

ls shows sshkey.private

ssh -i sshkey.private bandit14@localhost -p 2220

cat ../../etc/bandit_pass/bandit14

flag: MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS

________________________________________________________________

bandit14

I need to netcat into localhost:3000

nc localhost 30000 and use bandits13 flag.

flag: 8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo

________________________________________________________________

bandit15

I need to openssl into localhost:3001

openssl s_client -connect localhost:30001 then past bandit14 flag

flag: kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx

________________________________________________________________

bandit16

need to find which port is open to connect to.

nmap -p31000-32000 localhost

31046/tcp open  unknown
31518/tcp open  unknown
31691/tcp open  unknown
31790/tcp open  unknown
31960/tcp open  unknown

I tried each one and finally found port 31790 to be correct.

openssl s_client -quiet -connect localhost:31790

enter bandit 15 flag

get a private key

create a directory and file for the private key in /tmp

chmod 600 keys.private

ssh -i keys.private bandit14@bandit.labs.overthewire.org -p 2220

flag: EReVavePLFHtFlFsjn3hyzMlvSuSAcRD

________________________________________________________________

bandit17

need to compare the two files password.new password.old

diff password.new password.old

flag: x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO

________________________________________________________________

bandit18

the login script logs you out so if i use cat with the login it should still print the message before logging out.

ssh bandit.labs.overthewire.org -p 2220 -l bandit18 cat readme

flag: cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8

________________________________________________________________

bandit19

I need to use the binary on the the password file

./bandit20-do cat /../../etc/bandit_pass/bandit20

flag: 0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO

________________________________________________________________


bandit20

I need to use setuid binary with a simple TCP server.

ls to see what setuid binary is called suconnect.

simple server that tells when you're connected. echo "You're connected" | nc -l -p 

i noticed when i connected i got a error message "ERROR: This doesn't match the current password!"

lets replace You're connect with the last flag.

Got a message: Password matches, sending next password

check my running server and I have a the flag

flag: EeoULMCra2q0dSkYj561DX7s1CpBuOBt

________________________________________________________________

bandit21

I need to look into the cron job and see what command is being executed.

ls -l /etc/cron.d see what files there are

so if i cat /usr/bin/cronjob_bandit22.sh I'll be able to see the script.

* * * * * bandit22 /usr/bin/cronjob_bandit22.sh &> /dev/null

every * equals a minute, the user bandit 22 runs command /usr/bin/cronjob_bandit22.sh &> /dev/null.

#!/bin/bash
chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
cat /etc/bandit_pass/bandit22 > /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv

it changes permission so you can read and write then set the password in /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv

cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv and I have the flag

flag: tRae0UfB9v0UzbCdn9cY0gQnds9GF58Q

________________________________________________________________

bandit22

same as bandit21 but the the script does something different

#!/bin/bash

myname=$(whoami)
mytarget=$(echo I am user $myname | md5sum | cut -d ' ' -f 1)

echo "Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget"

cat /etc/bandit_pass/$myname > /tmp/$mytarget

looks like it finds what user you are then copies that users password to tmp.

Since its a cronjob I know its ran as the user bandit23.
So, if I generate the bandit23 md5sum hash. I should be able to cat the hash in tmp.

flag: 0Zf11ioIjMVN551jX3CmStKLYqjk54Ga

________________________________________________________________

bandit23

This is one I need to write a script that will be activated every minute by the cronjob

in the notes the script need to be created in /var/spool/bandit24/foo/

I'll run a test script first

create a space with the correct permission for my txt file to save.

mkdir -p /print
chmod 777 /tmp/print

The script

vim /var/spool/bandit24/foo/bandito.sh

#!/bin/bash
echo "hi" > /tmp/print/hi.txt

set permissions

chmod +x /var/spool/bandit24/foo/bandito.sh

then i can run 

cat /tmp/print/hi.txt

now to apply the same logic and copy the bandit24 flag.

here is the edited script

#!/bin/bash
cat /etc/bandit_pass/bandit24 > /tmp/print/flag.txt

flag: gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8

________________________________________________________________

bandit24

I need to brute force the pin code to gain access to bandit25 flag.

script

#!/bin/bash

flag:="gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8"
host="localhost"
port="30002"

for pincode in {0000..9999}
do
    echo "$flag $pincode" | nc $host $port
done

script got stuck because it kept trying to make a new connection each time.

So I open the connection outside of the loop.

#!/bin/bash

flag="gb8KRRCsshuZXI0tUuR6ypOFjiZbf3G8"
host="localhost"
port="30002"

for pincode in {0000..9999}
do
    echo "$flag $pincode"
done | nc $host $port

flag: iCi86ttT4KSNe1armKiwbQNmB3YJP3q4

________________________________________________________________

bandit25

I had ask google for help on this one.

I know to log myself into bandit26 from bandit25

ls

see there is a sshkey for bandit26

ssh -i bandit26.sshkey bandit26@localhost -p 2220

  _                     _ _ _   ___   __  
 | |                   | (_) | |__ \ / /  
 | |__   __ _ _ __   __| |_| |_   ) / /_  
 | '_ \ / _` | '_ \ / _` | | __| / / '_ \ 
 | |_) | (_| | | | | (_| | | |_ / /| (_) |
 |_.__/ \__,_|_| |_|\__,_|_|\__|____\___/ 
Connection to localhost closed.

the second thing was "The shell for user bandit26 is not /bin/bash"

cat /etc/passwd

26:/home/bandit26:/usr/bin/showtext

cat /usr/bin/showtext

#!/bin/sh

export TERM=linux

exec more ~/text.txt
exit 0

Thanks to google I found out there is a way to exploit the more command.

ssh -i bandit26.sshkey bandit26@localhost -p 2220

Simply make sure the terminal window is too small for the
ASCII Bandi26 logo and --More-- will show up at the bottom of the screen and wont log us out.

hit v key

:set shell=/bin/bash

:shell

now we are in the shell

we can cat /etc/bandit_pass/bandit26

flag: s0773xxkk0MXfdqOfPRVr9L3jJBUOgCZ

________________________________________________________________

bandit26

This ctf is a continuation of band 25

ls

see a file called bandit27-do running it gives us a hint

Run a command as another user.
  Example: ./bandit27-do id

./bandit27-do cat /etc/bandit_pass/bandit27

flag: upsNCc7vzaRDx6oZC6GiR6ERwe1MowGB

________________________________________________________________


bandit27

Just need to git clone

cd ../../tmp

mkdir gc 

cd gc

GIT_SSH_COMMAND="ssh -p 2220 -o PreferredAuthentications=password -o PubkeyAuthentication=no" git clone ssh://bandit27-git@localhost/home/bandit27-git/repo

cd repo

cat README

flag: Yz9IpL0sBcCeuG7m9uQFt8ZNpS4HZRcN

________________________________________________________________

bandit28

same as before

git clone ssh://bandit28-git@localhost:2220/home/bandit28-git/repo

cd repo

cat README.md5sum

# Bandit Notes
Some notes for level29 of bandit.

## credentials

- username: bandit29
- password: xxxxxxxxxx

check the commits

git log

found one commit called fix info leak

git show 674690a00a0056ab96048f7317b9ec20c057c06b

flag: 4pT1t5DENaYuqnqvadYs1oE4QLCdjmJ7

________________________________________________________________

bandit29

git clone ssh://bandit29-git@localhost:2220/home/bandit29-git/repo

switch branch/HEAD to dev

git branch

  origin/HEAD -> origin/master
  origin/dev
  origin/master
  origin/sploits-dev

git checkout dev

flag: qp30ex3VLz5MDG1n91YowTv4Q8l7CDZL

________________________________________________________________

bandit30

git clone ssh://bandit30-git@localhost:2220/home/bandit30-git/repo

README.md has a cute message.

can't be branches or logs

lets try tags

git tags

reveals secret tag

git show secret 

flag: fb5S2xb7bRyFmAvQYQGEqsbhVyJqhnDy

________________________________________________________________

bandit 31

git clone ssh://bandit31-git@localhost:2220/home/bandit31-git/repo

echo 'May I come in?' > key.txt

git add -f key.txt

git commit -m "keys"

git push

flag: 3O9RfhqyAlVBEZpVb6LYStshZoqoSx5K

________________________________________________________________

bandit 31

